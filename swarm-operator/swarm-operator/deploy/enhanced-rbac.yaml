apiVersion: v1
kind: ServiceAccount
metadata:
  name: swarm-operator
  namespace: swarm-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: swarm-executor
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: swarm-operator
rules:
# Core resources
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets", "serviceaccounts"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["namespaces", "nodes", "persistentvolumes"]
  verbs: ["get", "list", "watch"]
# Batch resources
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["*"]
# Apps resources
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["*"]
# CRDs
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# Swarm resources
- apiGroups: ["swarm.claudeflow.io"]
  resources: ["swarmclusters", "agents", "swarmtasks"]
  verbs: ["*"]
- apiGroups: ["swarm.claudeflow.io"]
  resources: ["swarmclusters/status", "agents/status", "swarmtasks/status"]
  verbs: ["get", "update", "patch"]
# Storage
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
# RBAC
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: swarm-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: swarm-operator
subjects:
- kind: ServiceAccount
  name: swarm-operator
  namespace: swarm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: swarm-executor
rules:
# Allow executors to read/write to their namespace
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Allow reading swarm resources
- apiGroups: ["swarm.claudeflow.io"]
  resources: ["swarmclusters", "agents", "swarmtasks"]
  verbs: ["get", "list", "watch"]
# Allow updating task status
- apiGroups: ["swarm.claudeflow.io"]
  resources: ["swarmtasks/status"]
  verbs: ["get", "update", "patch"]
# Allow job management
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: swarm-executor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: swarm-executor
subjects:
- kind: ServiceAccount
  name: swarm-executor
  namespace: default
---
# Network policies for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: swarm-operator
  namespace: swarm-system
spec:
  podSelector:
    matchLabels:
      app: swarm-operator
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: swarm-system
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 8080  # metrics
    - protocol: TCP
      port: 8081  # health
  egress:
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443  # Kubernetes API
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS