#!/bin/sh
set -e
echo "üöÄ Starting GitHub automation task..."

# Install required tools
apk add --no-cache curl jq go git

# Configure git
git config --global user.name "Swarm Operator"
git config --global user.email "$GITHUB_EMAIL"

# Create Go hello world app
echo "üì¶ Creating Go hello world application..."
mkdir -p /workspace/hello-swarm
cd /workspace/hello-swarm

# Create go.mod
cat > go.mod << EOF
module github.com/$GITHUB_USERNAME/hello-swarm

go 1.21
EOF

# Create main.go
cat > main.go << 'GOEOF'
package main

import (
	"fmt"
	"time"
)

func main() {
	fmt.Println("üêù Hello from Claude Flow Swarm!")
	fmt.Printf("Generated at: %s\n", time.Now().Format(time.RFC3339))
	fmt.Println("This app was created by an AI swarm running in Kubernetes!")
}
GOEOF

# Create README
cat > README.md << 'MDEOF'
# Hello Swarm üêù

This repository was automatically created and deployed by the Claude Flow Swarm Operator running in Kubernetes.

## About

This is a simple Go application that demonstrates the power of AI-driven automation in cloud-native environments.

### Features
- Automated repository creation
- Code generation by AI swarm
- GitOps workflow integration
- Kubernetes-native operation

### Running the app

```bash
go run main.go
```

---
*Generated by Claude Flow Swarm Operator v0.2.0*
MDEOF

# Create .gitignore
cat > .gitignore << 'GIEOF'
# Binaries
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary
*.test

# Output
*.out

# Go workspace
go.work
GIEOF

# Initialize git repo
git init

# Create GitHub repository using API
echo "üîß Creating GitHub repository..."
REPO_NAME="hello-swarm-$(date +%s)"
CREATE_REPO_RESPONSE=$(curl -s -X POST \
  -H "Authorization: token $GITHUB_TOKEN" \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/user/repos \
  -d "{
    \"name\": \"$REPO_NAME\",
    \"description\": \"Hello World app created by Claude Flow Swarm Operator\",
    \"private\": false,
    \"auto_init\": false
  }")

# Check if repo was created successfully
if echo "$CREATE_REPO_RESPONSE" | jq -e '.id' > /dev/null 2>&1; then
    echo "‚úÖ Repository created successfully!"
    REPO_URL=$(echo "$CREATE_REPO_RESPONSE" | jq -r '.clone_url')
    echo "Repository URL: $REPO_URL"
    
    # Add files and push
    git add .
    git commit -m "Initial commit: Hello World Go app created by Swarm Operator"
    git branch -M main
    git remote add origin "$REPO_URL"
    
    # Replace https:// with token auth
    REPO_URL_WITH_TOKEN=$(echo "$REPO_URL" | sed "s|https://|https://$GITHUB_TOKEN@|")
    git remote set-url origin "$REPO_URL_WITH_TOKEN"
    
    git push -u origin main
    
    echo "‚úÖ Code pushed successfully!"
    echo "üéâ Task completed! Check your repository at: $REPO_URL"
else
    echo "‚ùå Failed to create repository"
    echo "$CREATE_REPO_RESPONSE"
    exit 1
fi